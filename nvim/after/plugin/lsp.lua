vim.api.nvim_set_keymap("n", "gd", "<Plug>(coc-definition)", { silent = true })
vim.api.nvim_set_keymap("n", "gy", "<Plug>(coc-type-definition)", { silent = true })
vim.api.nvim_set_keymap("n", "gi", "<Plug>(coc-implementation)", { silent = true })
vim.api.nvim_set_keymap("n", "gr", "<Plug>(coc-references)", { silent = true })

vim.api.nvim_set_keymap("n", "K", ":call CocActionAsync('doHover')<CR>", { silent = true, noremap = true })

vim.api.nvim_set_keymap("n", "<leader>.", "<Plug>(coc-codeaction)", {})
vim.api.nvim_set_keymap("n", "<leader>cr", "<Plug>(coc-rename)", {})
vim.api.nvim_set_keymap("n", "<leader>co", ":<C-u>CocList outline<cr>", {})
vim.api.nvim_set_keymap("n", "<leader>cs", ":<C-u>CocList -I symbols<cr>", {})
vim.api.nvim_set_keymap("n", "<leader>cl", ":<C-u>CocList locationlist<cr>", {})
vim.api.nvim_set_keymap("n", "<leader>cc", ":<C-u>CocList commands<cr>", {})
vim.api.nvim_set_keymap("n", "<leader>cR", ":<C-u>CocRestart<cr>", {})
vim.api.nvim_set_keymap("n", "<leader>cx", ":<C-u>CocList extensions<cr>", {})
vim.api.nvim_set_keymap("n", "<leader>ce", ":CocCommand eslint.executeAutofix<CR>", {})
vim.api.nvim_set_keymap("n", "<leader>cp", ":CocCommand prettier.formatFile<CR>", { noremap = true })

vim.api.nvim_set_keymap("i", "<C-Space>", "coc#refresh()", { silent = true, expr = true })
vim.api.nvim_set_keymap("i", "<TAB>", "coc#pum#visible() ? coc#pum#next(1) : '<TAB>'", { noremap = true, silent = true, expr = true })
vim.api.nvim_set_keymap("i", "<S-TAB>", "coc#pum#visible() ? coc#pum#prev(1) : '<C-h>'", { noremap = true, expr = true })
vim.api.nvim_set_keymap("i", "<CR>", "coc#pum#visible() ? coc#pum#confirm() : '<C-G>u<CR><C-R>=coc#on_enter()<CR>'", { silent = true, expr = true, noremap = true })
